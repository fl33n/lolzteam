# - *- coding: utf- 8 - *-
# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π –∏ –∫–ª–∞—Å—Å–æ–≤
from data.models import Classroom
from keyboards.user_keyboard import (
    classrooms_kb,
    customizable_kb
)
from loader import bot, dp
from states.user_states import ClassroomAddState

from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.exceptions import MessageNotModified

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "üè´ –ö–∞–±–∏–Ω–µ—Ç—ã"
@dp.message_handler(text="üè´ –ö–∞–±–∏–Ω–µ—Ç—ã", state="*")
async def classrooms_handler(message: Message, state: FSMContext):
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)
    await state.finish()
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    await message.answer("<b>–°–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤:</b>",
                        reply_markup=await classrooms_kb(await Classroom.all()))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞–±–∏–Ω–µ—Ç–∞–º
@dp.callback_query_handler(text_startswith="classrooms:", state="*")
async def classrooms_call_handler(callback: CallbackQuery, state: FSMContext):
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.finish()
    # –†–∞–∑–±–∏–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö callback –Ω–∞ —á–∞—Å—Ç–∏
    callback_handler_type, page, operation = callback.data.split(":")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    if operation == "view":
        try:
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø–∏—Å–∫–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
            return await bot.edit_message_reply_markup(
                callback.from_user.id,
                callback.message.message_id,
                reply_markup=await classrooms_kb(await Classroom.all(), page=int(page))
            )
        except MessageNotModified:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞
            return await callback.answer("–ú—ã –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—á–∫–µ)")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    elif operation == "add":
        new_text = "<b>–û—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞ —Å 1 –ø–æ 150</b>"
        await ClassroomAddState.classroom_number.set()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ
    elif operation.isdigit():
        classroom = await Classroom.get(classroom_id=operation)
        new_text = f"üÜî: <b>{classroom.number}</b>\n" \
                   f"üßë‚Äçüéì <b>–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:</b> {classroom.capacity}"
    await callback.message.edit_text(
        new_text,
        reply_markup=await customizable_kb({"üëàüèª –ù–∞–∑–∞–¥": f"classrooms:{page}:view"}, "callback")
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–∞
@dp.message_handler(lambda message: message.text.isdigit(), state=ClassroomAddState.classroom_number)
async def classrooms_add_name_handler(message: Message, state: FSMContext):
    classroom_number = int(message.text)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–∞
    if classroom_number < 1 and classroom_number > 150:
        return await message.answer("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥. –ö–∞–±–∏–Ω–µ—Ç—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 1 –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è 150!")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º
    classroom = await Classroom.get_or_none(number=classroom_number)
    if classroom:
        return await message.answer("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥. –ö–∞–±–∏–Ω–µ—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    await state.update_data(classroom_number=classroom_number)
    await ClassroomAddState.next()
    await message.answer("–ù–∞–ø–∏—à–∏ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ >0")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
@dp.message_handler(lambda message: not message.text.isdigit(), state=ClassroomAddState.classroom_capacity)
async def reject_add_name_handler(message: Message, state: FSMContext):
    return await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∫–∞–±–∏–Ω–µ—Ç–∞
@dp.message_handler(lambda message: message.text.isdigit(), state=ClassroomAddState.classroom_capacity)
async def classrooms_add_teachers_handler(message: Message, state: FSMContext):
    classroom_capacity = int(message.text)
    classroom_number = (await state.get_data()).get("classroom_number")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if classroom_capacity < 1:
        return await message.answer("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥. –ö–∞–±–∏–Ω–µ—Ç –∏–º–µ–µ—Ç –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å <b>–º–∏–Ω–∏–º—É–º 1</b>!")
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await Classroom.create(number=classroom_number, capacity=classroom_capacity)
    await message.answer("<b>–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª!</b>")
    # –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    await classrooms_handler(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤–≤–æ–¥–∞ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
@dp.message_handler(lambda message: not message.text.isdigit(), state=ClassroomAddState.classroom_capacity)
async def reject_add_teachers_handler(message: Message, state: FSMContext):
    return await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
